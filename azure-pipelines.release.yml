pr: none
trigger: none

# Customize build number to include major version
# Example: v9_20201022.1
name: 'tensile_perf_$(Date:yyyyMMdd)$(Rev:.r)'

variables:
  - group: 'Github and NPM secrets'
  - group: 'Tensile Perf Auth Tokens'
  - name: tags
    value: production
    readonly: true

resources:
  repositories:
    - repository: 1esPipelines
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-latest
      os: windows # We need windows because compliance task only run on windows.
    stages:
      - stage: main
        jobs:
          - job: Release
            pool:
              name: '1ES-Host-Ubuntu'
              image: '1ES-PT-Ubuntu-20.04'
              os: linux
            workspace:
              clean: all
            templateContext:
              outputs:
                - output: pipelineArtifact
                  targetPath: $(System.DefaultWorkingDirectory)
                  artifactName: output
            steps:
              # For multiline scripts, we want the whole task to fail if any line of the script fails.
              # ADO doesn't have bash configured this way by default. To fix we override the SHELLOPTS built-in variable.
              # https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html
              # The options below include ADO defaults (braceexpand:hashall:interactive-comments) plus
              # errexit:errtrace for better error behavior.
              - script: |
                  echo "##vso[task.setvariable variable=shellopts]braceexpand:hashall:interactive-comments:errexit:errtrace"
                displayName: Force exit on error (bash)

              - task: NodeTool@0
                inputs:
                  versionSpec: '18.16.0'
                  checkLatest: false
                displayName: 'Install Node.js'

              - script: |
                  git config user.name "Fluent UI Build"
                  git config user.email "fluentui-internal@service.microsoft.com"
                  git remote set-url origin https://$(githubUser):$(githubPAT)@github.com/microsoft/tensile-perf.git
                displayName: Authenticate git for pushes

              - script: |
                  yarn install --frozen-lockfile --ignore-engines
                displayName: Install dependencies

              - script: |
                  yarn nx run-many --target=lint --all --verbose --skip-nx-cache
                displayName: yarn lint

              - script: |
                  yarn nx run-many --target=type-check --all --verbose --skip-nx-cache
                displayName: yarn type-check

              - script: |
                  yarn nx run-many --target=generate-api --all --verbose --skip-nx-cache
                displayName: yarn generate api

              - script: |
                  yarn build --skip-nx-cache
                displayName: yarn build

              # - script: |
              #     yarn nx run-many --target=test --all --verbose --skip-nx-cache
              #   displayName: yarn test

              - script: |
                  yarn beachball:publish --token $(NPM_TOKEN_TENSILE_PERF)
                  git reset --hard origin/main
                env:
                  GITHUB_PAT: $(githubPAT)
                displayName: Publish changes and bump versions
